local HttpService = game:GetService("HttpService")
local MarketplaceService = game:GetService("MarketplaceService")

-- WARNING: Never share your token!
local DISCORD_TOKEN = "
MTExMDQ5NTQwMzQxMDk4MDg2NQ.GkVYYX.3C99szo0bwnqMa6T78Zqi50C6EHw4YbRo6xcAg"  -- Replace with your actual token
local CHANNEL_ID = "1379122787201056829"  -- Replace with target channel ID

local executor = identifyexecutor() or "Unknown"

local function getGameName()
    local placeId = game.PlaceId
    local success, placeInfo = pcall(function()
        return MarketplaceService:GetProductInfo(placeId)
    end)
    return (success and placeInfo and placeInfo.Name) or "Unknown Game"
end

local function sendDiscordMessage()
    local player = game.Players.LocalPlayer
    local displayName = player and player.DisplayName or "N/A"
    local userName = player and player.Name or "Unknown"
    local playerId = player and player.UserId or 0

    local joinScript = string.format(
        "game:GetService('TeleportService'):TeleportToPlaceInstance(%s, '%s', game.Players.LocalPlayer)",
        game.PlaceId,
        game.JobId
    )

    local payload = {
        content = "**Script executed!**",
        embeds = {
            {
                title = ("%s (@%s)"):format(displayName, userName),
                color = 0x00FF00,
                thumbnail = {
                    url = ("https://www.roblox.com/headshot-thumbnail/image?userId=%d&width=420&height=420&format=png"):format(playerId)
                },
                fields = {
                    {
                        name = "Executor",
                        value = executor,
                        inline = true
                    },
                    {
                        name = "Game",
                        value = getGameName(),
                        inline = true
                    }
                }
            },
            {
                title = "Rejoin Script",
                description = ("```lua\n%s\n```"):format(joinScript),
                color = 0x00FF00
            }
        }
    }

    local requestData = {
        Url = "https://discord.com/api/v9/channels/"..CHANNEL_ID.."/messages",
        Method = "POST",
        Headers = {
            ["Authorization"] = DISCORD_TOKEN,
            ["Content-Type"] = "application/json"
        },
        Body = HttpService:JSONEncode(payload)
    }

    if syn then
        return syn.request(requestData)
    elseif request then
        return request(requestData)
    else
        warn("No HTTP request function available")
        return nil
    end
end

-- Execute
local response = sendDiscordMessage()
if response then
    print("Discord message sent! Status:", response.StatusCode)
else
    warn("Failed to send Discord message")
end
